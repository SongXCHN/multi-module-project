<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--  尽量别用绝对路径，如果带参数不同容器路径解释可能不同,以下配置参数在pom.xml里
     <property name="log.root.level" value="${log.root.level}" /> &lt;!&ndash; 日志级别 &ndash;&gt;
     <property name="log.other.level" value="${log.other.level}" /> &lt;!&ndash; 其他日志级别 &ndash;&gt;
     <property name="log.base" value="${log.base}" /> &lt;!&ndash; 日志路径，这里是相对路径，web项目eclipse下会输出到eclipse的安装目录下，如果部署到linux上的tomcat下，会输出到tomcat/bin目录 下 &ndash;&gt;
     <property name="log.moduleName" value="${log.moduleName}" />  &lt;!&ndash; 模块名称， 影响日志配置名，日志文件名 &ndash;&gt;
     <property name="log.max.size" value="100MB" /> &lt;!&ndash; 日志文件大小 &ndash;&gt;-->

    <!--<timestamp key="bySecond" datePattern="yyyy-MM-dd HH:mm:ss"/>-->

    <!--控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date{dd-MMM-yyyy HH:mm:ss.SSS, Locale.US} [%thread] %-5level %logger{50}: -%msg%n</pattern>
        </encoder>
    </appender>

    <!-- 日志文件输出 -->
    <!--<appender name="file" class="ch.qos.logback.core.FileAppender">
        <file>D:/log</file>　　　　　　
        <append>true</append>　　　　　　　　
        <encoder>　　　　　　　　　　
            <pattern>%date{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{50}: -%msg%n</pattern>　　　　　　　　
        </encoder>
    </appender>-->

    <!-- 日志文件输出 -->
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>D:/multi-module.log</file><!-- 设置日志不超过${log.max.size}时的保存路径，注意如果 是web项目会保存到Tomcat的bin目录 下 -->
        <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>D:/multi-module_all_%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 当天的日志大小 超过${log.max.size}时,压缩日志并保存 -->
            <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.max.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>-->
        </rollingPolicy>
        <!-- 日志输出的文件的格式  -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date{dd-MMM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{50}: -%msg%n</pattern>
        </encoder>
    </appender>

    <!-- 为某个包下的所有类的指定Appender 这里也可以指定类名称例如：com.aa.bb.ClassName, addtivity->是否向上级loger传递打印信息-->
    <logger name="org.dao.mapper" level="debug" additivity="false">
        <appender-ref ref="stdout"/>
    </logger>
    <!-- root将级别为“DEBUG”及大于“DEBUG”的日志信息交给已经配置好的名为“Console”的appender处理，“Console”appender将信息打印到Console -->
    <root level="info">
        <appender-ref ref="stdout"/> <!-- 标识这个appender将会添加到这个logger -->
        <appender-ref ref="rollingFile"/>
    </root>
</configuration>